name: Build
on:
  workflow_call:
    inputs:
      release:
        required: false
        type: boolean
        default: false
      version-operation:
        type: string
        required: false
        default: set-prerelease
      version-prerelease:
        type: string
        required: false
        default: '${commit_digest}'
      version-commit-message:
        type: string
    outputs:
      version-commit-objects:
        value: ${{ jobs.version.outputs.commit-objects }}
      version-commit-digest:
        value: ${{ jobs.version.outputs.commit-digest }}
      effective-version:
        value: ${{ jobs.version.outputs.version }}
      base-component-descriptor:
        value: ${{ jobs.base-component-descriptor.outputs.component-descriptor }}

jobs:
  params:
    runs-on: ubuntu-latest
    outputs:
      ocm_repository: ${{ steps.params.outputs.ocm_repository }}
      oci-registry: ${{ steps.params.outputs.oci-registry }}
      oci_platforms: ${{ steps.params.outputs.oci_platforms }}
    steps:
      - name: params
        id: params
        run: |
          if ${{ inputs.release || false }}; then
            ocm_repo='europe-docker.pkg.dev/gardener-project/releases'
            oci_repo='europe-docker.pkg.dev/gardener-project/releases/cicd'
          else
            ocm_repo='europe-docker.pkg.dev/gardener-project/snapshots'
            oci_repo='europe-docker.pkg.dev/gardener-project/snapshots/cicd'
          fi
          oci_platforms='linux/arm64,linux/amd64'

          echo "ocm_repository=${ocm_repo}" >> ${GITHUB_OUTPUT}
          echo "oci-registry=${oci_repo}" >> ${GITHUB_OUTPUT}
          echo "oci_platforms=${oci_platforms}" >> ${GITHUB_OUTPUT}

  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      commit-message: ${{ inputs.version-commit-message }}
      commit-objects: ${{ steps.version.outputs.commit-objects }}
      commit-digest: ${{ steps.version.outputs.commit-digest }}
    steps:
    - uses: actions/checkout@v4
    - name: version
      id: version
      uses: gardener/cc-utils/.github/actions/version@master
      with:
        version-operation: ${{ inputs.version-operation }}
        prerelease: ${{ inputs.version-prerelease }}

  build:
    permissions:
      contents: read
      packages: write
      id-token: write
    needs:
      - params
      - version
    strategy:
      matrix:
        args:
          - name: concourse-worker
            prebuild-hook: ./prebuild-registry-resource.sh
            dockerfile: concourse-worker.dockerfile
            oci-platforms: linux/amd64,linux/arm64
            oci-repository: concourse-worker
            # todo: handle build-args
            labels: |
              - name: gardener.cloud/cve-categorisation
                value:
                  network_exposure: public
                  authentication_enforced: true
                  user_interaction: gardener-operator
                  confidentiality_requirement: high
                  integrity_requirement: high
                  availability_requirement: high
          - name: concourse-web
            oci-repository: concourse-web
            dockerfile: concourse-web.dockerfile
            oci-platforms: linux/amd64
            labels: |
              - name: gardener.cloud/cve-categorisation
                value:
                  network_exposure: public
                  authentication_enforced: true
                  user_interaction: gardener-operator
                  confidentiality_requirement: high
                  integrity_requirement: high
                  availability_requirement: high
          - name: concourse-resource-git
            oci-repository: concourse-resource-git
            dockerfile: concourse-resource-git.dockerfile
            oci-platforms: linux/amd64,linux/arm64
            labels: |
              - name: gardener.cloud/cve-categorisation
                value:
                  network_exposure: protected
                  authentication_enforced: false
                  user_interaction: gardener-operator
                  confidentiality_requirement: low
                  integrity_requirement: high
                  availability_requirement: low
          - name: concourse-resource-time
            oci-repository: concourse-resource-time
            dockerfile: concourse-resource-time.dockerfile
            oci-platforms: linux/amd64,linux/arm64
            labels: |
              - name: gardener.cloud/cve-categorisation
                value:
                  network_exposure: protected
                  authentication_enforced: false
                  user_interaction: gardener-operator
                  confidentiality_requirement: none
                  integrity_requirement: high
                  availability_requirement: none
    uses: gardener/cc-utils/.github/workflows/oci-ocm.yaml@master
    with:
      name: ${{ matrix.args.name }}
      oci-registry: ${{ needs.params.outputs.oci-registry }}
      oci-repository: ${{ matrix.args.oci-repository }}
      oci-platforms: ${{ matrix.args.oci-platforms }}
      dockerfile: ${{ matrix.args.dockerfile }}
      prebuild-hook: ${{ matrix.args.prebuild-hook }}
      version: ${{ needs.version.outputs.version }}

  base-component-descriptor:
    needs:
      - version
      - params
    uses: gardener/cc-utils/.github/workflows/base-component-descriptor.yaml@master
    with:
      version: ${{ needs.version.outputs.version }}
      ocm-repo: ${{ needs.params.outputs.ocm_repository }}
      commit-digest: ${{ needs.version.outputs.commit-digest }}
      labels: |
        - name: cloud.gardener.cnudie/responsibles
          value:
            - type: githubTeam
              teamname: gardener/ci-maintainers
              github_hostname: github.com
        - name: cloud.gardener.cnudie/dso/scanning-hints/source_analysis/v1
          value:
            policy: skip
            comment: |
              the repository does not contain source code, but only the
              build-description of concourse-ci
